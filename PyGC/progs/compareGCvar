#! /usr/bin/env python

# Copyright (C) 2010
# Glimmer-CISM contributors - see AUTHORS file for list of contributors
#
# This file is part of Glimmer-CISM.
#
# Glimmer-CISM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or (at
# your option) any later version.
#
# Glimmer-CISM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Glimmer-CISM.  If not, see <http://www.gnu.org/licenses/>.
#
# Glimmer-CISM is hosted on BerliOS.de:
# https://developer.berlios.de/projects/glimmer-cism/

"""A simple plot of CF fields."""

import string
import PyGC
import matplotlib.pyplot
import matplotlib.cm, matplotlib.colors
from mpl_toolkits.axes_grid.anchored_artists import AnchoredText

import numpy,math

# creating option parser
parser = PyGC.GCOptParser(usage = "usage: %prog [options] infile1 infile2")
parser.var()
parser.time()
parser.plot()
opts = PyGC.GCOptions(parser,2)

if opts.options.level == None:
    level = 0
else:
    level = opts.options.level


var = []
mask = []

for i in [0,1]:
    infile = opts.gcfile(i)
    v = opts.vars(infile)
    t = opts.times(infile)
    m = numpy.where(infile.getvar('thk').get2Dfield(t)>0.,0,1)
    var.append( v.get2Dfield(t,level=level))
    mask.append(m)
mask = numpy.where(mask[0]+mask[1]>0,True,False)

diff = numpy.ma.array(var[1] - var[0],mask=mask)
title = 'Difference in %s'%v.long_name
label = 'Difference [%s]'%v.units

if opts.plotsize==None:
    size = (8,10)
else:
    size = opts.plotsize

fig = matplotlib.pyplot.figure(figsize=size)
h = fig.add_axes([0.1,0.1,0.8,0.4])
m = fig.add_axes([0.1,0.55,0.8,0.4])

n, bins, patches = h.hist(diff.ravel())
h.set_xlabel(label)
h.set_ylabel('number of cells')
for l in h.get_xticklabels():
    l.set_rotation(30)
    l.set_horizontalalignment('right')

im=m.imshow(diff,origin='lower')
m.set_aspect('equal')
cb = fig.colorbar(im, extend='both', spacing='uniform',orientation='vertical', shrink=0.8)
cb.set_label(label)

# plot time stamp
if opts.options.timestamp:
    m.add_artist(AnchoredText('%.2fka'%infile.time(t),loc=4))

# display title
if opts.options.title:
    matplotlib.pyplot.title(title)


if opts.options.output==None:
    matplotlib.pyplot.show()
else:
    matplotlib.pyplot.savefig(opts.options.output)
