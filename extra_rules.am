%.nc:	%.config
	$(PYTHON) $(top_srcdir)/scripts/glide_launch.py $(LAUNCH_OPTIONS) -m $(MODEL_BINARY) @AM_SGE_OPTS@ $(SGE_OPTS) $^

graphics:	$(graphics)
data:		$(data)

compare-%:	%.nc	
	@if [ ! -e $(GOLDEN_STD_PREFIX)/$(rel_builddir)/$^ ];then \
	echo "Reference file does not exist, download files from ftp.berlios.de/pub/glimmer-cism"; \
	echo "and point configure to this directory --with-golden-std=/path/to/files"; \
	exit -1; \
	fi ;\
	if $(top_builddir)/utils/compare $(GOLDEN_STD_PREFIX)/$(rel_builddir)/$^ $^ -a 1e-8; then \
	echo "test passed"; \
	else echo "test failed"; \
	fi	

check-data:	
	@$(foreach data,$(data), make compare-$(basename $(data));)

plotGCvar = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/PyGC/progs/plotGCvar
plotGCProfile = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/PyGC/progs/plotGCProfile
plotGCProfileTS = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/PyGC/progs/plotGCProfileTS
plotEISMINT2stats = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/PyGC/progs/plotEISMINT2stats -d $(top_srcdir)/PyGC/data/eismint2.data --size=4 3
plotGCseds =  PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/extensions/erosion/scripts/plotGCseds --colourmap=$(top_srcdir)/extensions/erosion/scripts/erosion.cpt
plotGCSedsProfile = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/extensions/erosion/scripts/plotGCSedsProfile
plotGCSpotTS = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/PyGC/progs/plotGCSpotTS
plotGCSpot = PYTHONPATH=$(top_builddir)/PyGC/src/.libs:$(top_srcdir)/PyGC/:$$PYTHONPATH $(top_srcdir)/PyGC/progs/plotGCSpot

# the following macro produces the current build path relative to the toplevel build directory
rel_builddir = $(subst  $(abspath $(top_builddir))/,,$(CURDIR))

f90_dep_sources ?= $(SOURCES)

f90_dep.mak:	$(f90_dep_sources)
		$(PYTHON) $(top_srcdir)/scripts/f90_dependencies.py -l -o $@ $^

SUFFIXES = .config
